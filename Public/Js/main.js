// Sample products data
let products = [
    {
        id: 1,
        name: "G·∫°o ST24 - T√∫i 5kg",
        category: "food",
        price: 125000,
        image: "https://tse4.mm.bing.net/th?id=OIP.88bqk-xrd17cRtx9n3R1OwHaE8&pid=Api&P=0&h=220",
        description: "G·∫°o th∆°m ngon, ch·∫•t l∆∞·ª£ng cao"
    },
    {
        id: 2,
        name: "Coca Cola - Lon 330ml",
        category: "drink",
        price: 15000,
        image: "https://tse1.mm.bing.net/th?id=OIP._pNu37xcrS1shNDyrT6NlAHaE8&pid=Api&P=0&h=220",
        description: "N∆∞·ªõc ng·ªçt c√≥ gas, v·ªã cola truy·ªÅn th·ªëng"
    },
    {
        id: 3,
        name: "B√°nh quy Oreo",
        category: "snack",
        price: 25000,
        image: "https://cdn.tgdd.vn/2021/06/CookProduct/1(3)-1200x676-1.jpg",
        description: "B√°nh quy kem socola th∆°m ngon"
    },
    {
        id: 4,
        name: "N∆∞·ªõc r·ª≠a ch√©n Sunlight",
        category: "household",
        price: 45000,
        image: "https://khoe.online/wp-content/uploads/2022/05/gia-nuoc-rua-chen-sunlight.jpg",
        description: "N∆∞·ªõc r·ª≠a ch√©n an to√†n, kh·ª≠ m√πi hi·ªáu qu·∫£"
    },
    {
        id: 5,
        name: "S·ªØa t∆∞∆°i TH True Milk",
        category: "drink",
        price: 28000,
        image: "https://ktmt.vnmediacdn.com/images/2022/03/29/13-1648564494-cover-1.jpg",
        description: "S·ªØa t∆∞∆°i nguy√™n ch·∫•t, kh√¥ng ƒë∆∞·ªùng"
    },
    {
        id: 6,
        name: "M√¨ t√¥m H·∫£o H·∫£o",
        category: "food",
        price: 4500,
        image: "https://cf.shopee.vn/file/422a048d7de0560d93d5b6b3163e9ff0",
        description: "M√¨ t√¥m chua cay truy·ªÅn th·ªëng"
    },
    {
        id: 7,
        name: "Tr√† xanh Kh√¥ng ƒê·ªô",
        category: "drink",
        price: 10000,
        image: "https://tse4.mm.bing.net/th?id=OIP.9_vafZVoNv4yivdw-iBFpwHaFj&pid=Api&P=0&h=220",
        description: "N∆∞·ªõc tr√† xanh thanh m√°t"
    },
    {
        id: 8,
        name: "KhƒÉn gi·∫•y Bless You",
        category: "household",
        price: 20000,
        image: "https://tse1.mm.bing.net/th?id=OIP.jBq1oo0MfAFcs9IK3N3yPQHaFj&pid=Api&P=0&h=220",
        description: "KhƒÉn gi·∫•y m·ªÅm m·ªãn, d√πng ƒëa nƒÉng"
    },
    {
        id: 9,
        name: "Snack khoai t√¢y Lay's",
        category: "snack",
        price: 18000,
        image: "https://cdn.tgdd.vn/Files/2021/09/29/1386443/snack-lays-vi-nao-ngon-nhat-202109290914056051.jpg",
        description: "Snack khoai gi√≤n r·ª•m, v·ªã t·ª± nhi√™n"
    },
    {
        id: 10,
        name: "S·ªØa chua Vinamilk",
        category: "drink",
        price: 6000,
        image: "https://www.vinamilk.com.vn/sua-chua-vinamilk/wp-content/uploads/2023/03/2023_s7-VNM_BQNK_VideoThumbnail_MO-640x480@2x-1.jpg",
        description: "S·ªØa chua tr·∫Øng l√™n men t·ª± nhi√™n"
    }
];

let cart = [];
let currentFilter = 'all';

// Initialize the page
function init() {
    renderProducts();
    updateCartCount();
    startCountdown();
}

// Render products
function renderProducts() {
    const grid = document.getElementById('productsGrid');
    const filteredProducts = currentFilter === 'all' 
        ? products 
        : products.filter(p => p.category === currentFilter);
    
    grid.innerHTML = filteredProducts.map(product => `
        <div class="product-card">
            <img src="${product.image}" alt="${product.name}" class="product-image">
            <div class="product-info">
                <h3>${product.name}</h3>
                <div class="product-category">${getCategoryName(product.category)}</div>
                <div class="product-price">${formatPrice(product.price)}</div>
                <div class="product-actions">
                    <button class="btn btn-primary" onclick="addToCart(${product.id})">üõí Th√™m v√†o gi·ªè</button>
                    <button class="btn btn-secondary" onclick="deleteProduct(${product.id})">üóëÔ∏è X√≥a</button>
                </div>
            </div>
        </div>
    `).join('');
}

// L∆∞u gi·ªè h√†ng v√†o localStorage (theo MaSP, SoLuong)
function getCart() {
    return JSON.parse(localStorage.getItem('cart')) || [];
}
function saveCart(cart) {
    localStorage.setItem('cart', JSON.stringify(cart));
}

// Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng (theo s·ªë l∆∞·ª£ng)
function addToCart(productId, qty = 1) {
    let cart = getCart();
    qty = Number(qty) || 1; // ƒê·∫£m b·∫£o qty l√† s·ªë
    // T√¨m s·∫£n ph·∫©m trong danh s√°ch products
    let product = products.find(p => p.id === productId);
    if (!product) return;

    let found = cart.find(item => item.MaSP === productId);
    if (found) {
        found.SoLuong = Number(found.SoLuong) + qty; // ƒê·∫£m b·∫£o ph√©p c·ªông ƒë√∫ng ki·ªÉu s·ªë
    } else {
        cart.push({
            MaSP: product.id,
            TenSP: product.name,
            Gia: product.price,
            HinhAnh: product.image,
            SoLuong: qty
        });
    }
    saveCart(cart);
    updateCartCount();
    showNotification('ƒê√£ th√™m v√†o gi·ªè h√†ng!');
}

// Hi·ªÉn th·ªã gi·ªè h√†ng v√† t√≠nh t·ªïng ti·ªÅn
function renderCart() {
    let cart = getCart();
    const cartItems = document.getElementById('cartItems');
    const totalPrice = document.getElementById('totalPrice');
    
    if (!cart.length) {
        cartItems.innerHTML = '<div style="text-align: center; padding: 50px; color: #666;">Gi·ªè h√†ng tr·ªëng</div>';
        totalPrice.textContent = '0ƒë';
        return;
    }

    let total = 0;
    cartItems.innerHTML = '';
    cart.forEach(item => {
        const productTotal = item.Gia * item.SoLuong;
        total += productTotal;

        const itemDiv = document.createElement('div');
        itemDiv.className = 'cart-item';
        itemDiv.innerHTML = `
            <div class="cart-item-info">
                <img src="${item.HinhAnh}" alt="${item.TenSP}" class="cart-item-image">
                <div class="cart-item-details">
                    <h4>${item.TenSP}</h4>
                    <p>Gi√°: ${item.Gia.toLocaleString()}‚Ç´</p>
                    <div class="quantity-control">
                        <button onclick="updateQuantity(${item.MaSP}, -1)">‚ûñ</button>
                        <span>${item.SoLuong}</span>
                        <button onclick="updateQuantity(${item.MaSP}, 1)">‚ûï</button>
                    </div>
                </div>
            </div>
            <div class="cart-item-actions">
                <p>T·∫°m t√≠nh: ${productTotal.toLocaleString()}‚Ç´</p>
                <button class="btn-delete" onclick="removeFromCart(${item.MaSP})">üóëÔ∏è X√≥a</button>
            </div>
        `;
        cartItems.appendChild(itemDiv);
    });

    totalPrice.textContent = total.toLocaleString() + 'ƒë';
}

// C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng trong gi·ªè h√†ng
function updateQuantity(MaSP, change) {
    let cart = getCart();
    let item = cart.find(i => i.MaSP === MaSP);
    if (!item) return;
    // ƒê·∫£m b·∫£o change l√† s·ªë nguy√™n (c√≥ th·ªÉ l√† -1 ho·∫∑c 1)
    change = Number(change);
    item.SoLuong = Number(item.SoLuong) + change;
    if (item.SoLuong <= 0) {
        removeFromCart(MaSP);
    } else {
        saveCart(cart);
        renderCart();
    }
}

// X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
function removeFromCart(MaSP) {
    let cart = getCart();
    cart = cart.filter(item => item.MaSP !== MaSP);
    saveCart(cart);
    updateCartCount();
    renderCart();
    showNotification('ƒê√£ x√≥a kh·ªèi gi·ªè h√†ng!');
}

// ƒê·∫øm s·ªë s·∫£n ph·∫©m trong gi·ªè h√†ng
function updateCartCount() {
    const cart = getCart();
    const totalCount = cart.reduce((sum, item) => sum + item.SoLuong, 0);
    document.getElementById('cartCount').textContent = totalCount;
}

// ƒê·ªãnh d·∫°ng gi√° ti·ªÅn
function formatPrice(price) {
    return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.') + '‚Ç´';
}

// L·∫•y t√™n danh m·ª•c
function getCategoryName(category) {
    const categories = {
        food: 'Th·ª±c ph·∫©m',
        drink: 'ƒê·ªì u·ªëng',
        snack: 'ƒê·ªì ƒÉn v·∫∑t',
        household: 'Gia d·ª•ng'
    };
    return categories[category] || category;
}

// Hi·ªÉn th·ªã th√¥ng b√°o
function showNotification(message) {
    const notification = document.getElementById('notification');
    notification.textContent = message;
    notification.style.display = 'block';
    setTimeout(() => { notification.style.display = 'none'; }, 3000);
}

// Countdown timer
function startCountdown() {
    let hours = 1, minutes = 0, seconds = 0;
    function update() {
        if (seconds === 0) {
            if (minutes === 0) {
                if (hours === 0) return;
                hours--; minutes = 59; seconds = 59;
            } else { minutes--; seconds = 59; }
        } else { seconds--; }
        document.getElementById('hours').textContent = String(hours).padStart(2, '0');
        document.getElementById('minutes').textContent = String(minutes).padStart(2, '0');
        document.getElementById('seconds').textContent = String(seconds).padStart(2, '0');
        setTimeout(update, 1000);
    }
    update();
}

// Khi m·ªü panel gi·ªè h√†ng, l·∫•y d·ªØ li·ªáu t·ª´ server (n·∫øu ƒë√£ ƒëƒÉng nh·∫≠p)
function renderCartServer() {
    fetch('/websitebanhangtaphoa/giohang_c/layGioHang')
        .then(res => res.json())
        .then(cart => {
            const cartItems = document.getElementById('cartItems');
            const totalPrice = document.getElementById('totalPrice');
            let totalQty = 0;
            if (!cart || cart.length === 0) {
                cartItems.innerHTML = '<div style="text-align: center; padding: 50px; color: #666;">Gi·ªè h√†ng tr·ªëng</div>';
                totalPrice.textContent = '0ƒë';
                document.getElementById('cartCount').textContent = '0';
                return;
            }
            let total = 0;
            cartItems.innerHTML = '';
            cart.forEach(item => {
                const productTotal = item.Gia * item.SoLuong;
                total += productTotal;
                totalQty += parseInt(item.SoLuong);
                const itemDiv = document.createElement('div');
                itemDiv.className = 'cart-item';
                itemDiv.innerHTML = `
                    <div class="cart-item-info">
                        <img src="${item.HinhAnh}" alt="${item.TenSP}" class="cart-item-image">
                        <div class="cart-item-details">
                            <h4>${item.TenSP}</h4>
                            <p>Gi√°: ${Number(item.Gia).toLocaleString()}‚Ç´</p>
                            <div class="quantity-control">
                                <button onclick="updateQuantityServer(${item.MaSP}, -1)">‚ûñ</button>
                                <span>${item.SoLuong}</span>
                                <button onclick="updateQuantityServer(${item.MaSP}, 1)">‚ûï</button>
                            </div>
                        </div>
                    </div>
                    <div class="cart-item-actions">
                        <p>T·∫°m t√≠nh: ${productTotal.toLocaleString()}‚Ç´</p>
                        <button class="btn-delete" onclick="removeFromCartServer(${item.MaSP})">üóëÔ∏è X√≥a</button>
                    </div>
                `;
                cartItems.appendChild(itemDiv);
            });
            totalPrice.textContent = total.toLocaleString() + 'ƒë';
            document.getElementById('cartCount').textContent = totalQty;
        });
}
function toggleCart() {
    const panel = document.getElementById('cartPanel');
    panel.style.display = (panel.style.display === 'block') ? 'none' : 'block';
    if (panel.style.display === 'block') renderCartServer();
}
function removeFromCartServer(MaSP) {
    fetch('/websitebanhangtaphoa/giohang_c/xoaSanPham', {
        method: 'POST',
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        body: 'MaSP=' + MaSP
    }).then(() => renderCartServer());
}
function updateQuantityServer(MaSP, change) {
    fetch('/websitebanhangtaphoa/giohang_c/themVaoGio', {
        method: 'POST',
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        body: 'MaSP=' + MaSP + '&SoLuong=' + change
    }).then(() => renderCartServer());
}
function themVaoGioServer(MaSP, SoLuong) {
    fetch('/websitebanhangtaphoa/giohang_c/themVaoGio', {
        method: 'POST',
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        body: 'MaSP=' + MaSP + '&SoLuong=' + SoLuong
    })
    .then(res => res.json())
    .then(data => {
        if (data && data.message) showNotification(data.message);
        renderCartServer();
    });
}

init();